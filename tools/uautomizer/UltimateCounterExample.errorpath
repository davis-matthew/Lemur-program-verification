[L26]              unsigned A, B;
[L27]              unsigned q, r, b, tmp;
[L28]              A = __VERIFIER_nondet_uint()
[L29]  CALL        assume_abort_if_not(A>=0 && A<=5)
       VAL         [\old(cond)=1]
[L16]  COND FALSE  !(!cond)
       VAL         [\old(cond)=1, cond=1]
[L29]  RET         assume_abort_if_not(A>=0 && A<=5)
       VAL         [A=5]
[L30]              B = 1
[L31]              q = 0
[L32]              r = A
[L33]              b = B
       VAL         [A=5, B=1, b=1, q=0, r=5]
[L34]  COND TRUE   1
       VAL         [A=5, B=1, b=1, q=0, r=5]
[L35]  COND FALSE  !(!(r >= b))
[L36]              b = 2 * b
       VAL         [A=5, B=1, b=2, q=0, r=5]
[L34]  COND TRUE   1
       VAL         [A=5, B=1, b=2, q=0, r=5]
[L35]  COND FALSE  !(!(r >= b))
[L36]              b = 2 * b
       VAL         [A=5, B=1, b=4, q=0, r=5]
[L34]  COND TRUE   1
       VAL         [A=5, B=1, b=4, q=0, r=5]
[L35]  COND FALSE  !(!(r >= b))
[L36]              b = 2 * b
       VAL         [A=5, B=1, b=8, q=0, r=5]
[L34]  COND TRUE   1
       VAL         [A=5, b=8, B=1, q=0, r=5]
[L35]  COND TRUE   !(r >= b)
       VAL         [A=5, B=1, b=8, q=0, r=5]
[L38]  COND TRUE   1
[L39]  CALL        __VERIFIER_assert(q <= 4)
[L19]  COND FALSE  !(!(cond))
       VAL         [\old(cond)=1, cond=1]
[L39]  RET         __VERIFIER_assert(q <= 4)
[L43]  COND FALSE  !(!(b != B))
[L44]              q = 2 * q
[L45]              b = b / 2
       VAL         [A=5, b=4, B=1, q=0, r=5]
[L47]  CALL        assume_abort_if_not((b & (b - 1)) == 0)
       VAL         [\old(cond)=1]
[L16]  COND FALSE  !(!cond)
       VAL         [\old(cond)=1, cond=1]
[L47]  RET         assume_abort_if_not((b & (b - 1)) == 0)
       VAL         [A=5, B=1, b=4, q=0, r=5]
[L48]  CALL        assume_abort_if_not(b >= 1 ||  r >= b/2 - 1)
       VAL         [\old(cond)=1]
[L16]  COND FALSE  !(!cond)
       VAL         [\old(cond)=1, cond=1]
[L48]  RET         assume_abort_if_not(b >= 1 ||  r >= b/2 - 1)
       VAL         [A=5, B=1, b=4, q=0, r=5]
[L50]  COND TRUE   r >= b
[L51]              q = q + 1
[L52]              r = r - b
       VAL         [A=5, b=4, B=1, q=1, r=1]
[L38]  COND TRUE   1
[L39]  CALL        __VERIFIER_assert(q <= 4)
[L19]  COND FALSE  !(!(cond))
       VAL         [\old(cond)=1, cond=1]
[L39]  RET         __VERIFIER_assert(q <= 4)
[L43]  COND FALSE  !(!(b != B))
[L44]              q = 2 * q
[L45]              b = b / 2
       VAL         [A=5, B=1, b=2, q=2, r=1]
[L47]  CALL        assume_abort_if_not((b & (b - 1)) == 0)
       VAL         [\old(cond)=1]
[L16]  COND FALSE  !(!cond)
       VAL         [\old(cond)=1, cond=1]
[L47]  RET         assume_abort_if_not((b & (b - 1)) == 0)
       VAL         [A=5, B=1, b=2, q=2, r=1]
[L48]  CALL        assume_abort_if_not(b >= 1 ||  r >= b/2 - 1)
       VAL         [\old(cond)=1]
[L16]  COND FALSE  !(!cond)
       VAL         [\old(cond)=1, cond=1]
[L48]  RET         assume_abort_if_not(b >= 1 ||  r >= b/2 - 1)
       VAL         [A=5, B=1, b=2, q=2, r=1]
[L50]  COND FALSE  !(r >= b)
       VAL         [A=5, B=1, b=2, q=2, r=1]
[L38]  COND TRUE   1
[L39]  CALL        __VERIFIER_assert(q <= 4)
[L19]  COND FALSE  !(!(cond))
       VAL         [\old(cond)=1, cond=1]
[L39]  RET         __VERIFIER_assert(q <= 4)
[L43]  COND FALSE  !(!(b != B))
[L44]              q = 2 * q
[L45]              b = b / 2
       VAL         [A=5, B=1, b=1, q=4, r=1]
[L47]  CALL        assume_abort_if_not((b & (b - 1)) == 0)
       VAL         [\old(cond)=1]
[L16]  COND FALSE  !(!cond)
       VAL         [\old(cond)=1, cond=1]
[L47]  RET         assume_abort_if_not((b & (b - 1)) == 0)
       VAL         [A=5, B=1, b=1, q=4, r=1]
[L48]  CALL        assume_abort_if_not(b >= 1 ||  r >= b/2 - 1)
       VAL         [\old(cond)=1]
[L16]  COND FALSE  !(!cond)
       VAL         [\old(cond)=1, cond=1]
[L48]  RET         assume_abort_if_not(b >= 1 ||  r >= b/2 - 1)
       VAL         [A=5, b=1, B=1, q=4, r=1]
[L50]  COND TRUE   r >= b
[L51]              q = q + 1
[L52]              r = r - b
       VAL         [A=5, b=1, B=1, q=5, r=0]
[L38]  COND TRUE   1
[L39]  CALL        __VERIFIER_assert(q <= 4)
[L19]  COND TRUE   !(cond)
       VAL         [\old(cond)=0, cond=0]
[L21]              reach_error()
       VAL         [\old(cond)=0, cond=0]

